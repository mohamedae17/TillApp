@page "/orders"
@using TillApp.Shared.Models
@inject HttpClient Http

<h3>Unpaid Orders</h3>

@if (Orders == null)
{
    <p>Loading...</p>
}
else if (!Orders.Any())
{
    <p>No unpaid orders available.</p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Order Name</th>
                <th>Amount</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Orders)
            {
                <tr>
                    <td>@order.OrderName</td>
                    <td>£@order.Amount</td>
                    <td>
                        <button @onclick="() => MarkAsPaid(order.OrderID)">Paid</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Order>? Orders;

    protected override async Task OnInitializedAsync()
    {
        await LoadOrders();
    }

    private async Task LoadOrders()
    {
        Orders = await Http.GetFromJsonAsync<List<Order>>("api/orders");
    }

    private async Task MarkAsPaid(int orderId)
    {
        // await Http.PutAsync($"api/orders/pay/{orderId}", null);
        // Orders.RemoveAll(o => o.OrderID == orderId);
    }
}
